{"version":3,"sources":["components/templates/MainTemplate/classes.module.css","components/pages/TodoList/classes.module.css","components/organisms/Header/index.tsx","components/organisms/Footer/index.tsx","components/organisms/NotificationBar/index.tsx","components/templates/MainTemplate/index.tsx","components/pages/Home/index.tsx","components/atoms/TextField/index.tsx","components/organisms/Form/index.tsx","components/pages/About/index.tsx","components/pages/TodoList/index.tsx","components/Router/index.tsx","serviceWorker.ts","index.tsx","components/organisms/Footer/classes.module.css","components/atoms/TextField/classes.module.css","components/organisms/NotificationBar/classes.module.css","components/organisms/Header/classes.module.css"],"names":["module","exports","Header","AppBar","className","classes","LayoutHeader","Toolbar","to","Link","Typography","root","TypographyHeader","Footer","LayoutFooter","TypographyFooter","NotificationBar","type","message","useState","open","setOpen","useEffect","Snackbar","action","IconButton","size","aria-label","color","onClick","_event","reason","Close","fontSize","ContentProps","classnames","info","error","success","warning","MainTemplate","notif","children","LayoutPage","Container","fixed","maxWidth","LayoutContainer","Home","setNotif","rand","Math","random","randomNotif","CustomizedTextField","name","onChange","onBlur","restProps","context","useFormikContext","undefined","TextField","hasError","useMemo","errors","useField","field","onFieldChange","onFieldBlur","restFieldProps","handleChange","e","handleBlur","variant","InputProps","notched","labelWidth","Input","input","InputInput","InputLabelProps","shrink","InputLabel","outlined","InputLabelOutlined","helperText","FormHelperTextProps","FormHelperText","Form","initialValue","validationSchema","onSubmit","initialValues","validateOnBlur","validateOnChange","handleSubmit","About","Yup","shape","email","required","age","min","max","values","console","log","Box","label","Button","TodoList","tasks","setTasks","id","title","done","v4","resetForm","task","props","AddForm","ButtonSubmit","AddCircle","map","key","Router","CssBaseline","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a0428809.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutPage\":\"classes_LayoutPage__IADik\",\"LayoutContainer\":\"classes_LayoutContainer__2YoBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddForm\":\"classes_AddForm__2LsXt\",\"ButtonSubmit\":\"classes_ButtonSubmit__2S2Kx\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\n\nimport classes from \"./classes.module.css\";\n\nconst Header: React.FunctionComponent = () => (\n  <AppBar className={classes.LayoutHeader}>\n    <Toolbar>\n      <NavLink to=\"/\" className={classes.Link}>\n        <Typography classes={{ root: classes.TypographyHeader }}>Header</Typography>\n      </NavLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Typography } from \"@material-ui/core\";\n\nimport classes from \"./classes.module.css\";\n\nconst Footer: React.FunctionComponent = () => (\n  <div className={classes.LayoutFooter}>\n    <NavLink to=\"/about\" className={classes.Link}>\n      <Typography classes={{ root: classes.TypographyFooter }}>about</Typography>\n    </NavLink>\n    <NavLink to=\"/todo\" className={classes.Link}>\n      <Typography classes={{ root: classes.TypographyFooter }}>todo</Typography>\n    </NavLink>\n    <Typography classes={{ root: classes.TypographyFooter }}>something</Typography>\n    <Typography classes={{ root: classes.TypographyFooter }}>copyrights</Typography>\n  </div>\n);\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  IconButton,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\nimport classes from \"./classes.module.css\";\n\nexport type Notif = \"info\" | \"error\" | \"warning\" | \"success\";\n\ninterface OwnProps {\n  type: Notif;\n  message?: React.ReactNode;\n}\n\ninterface LocalState {\n  open: boolean;\n}\n\ntype Props = OwnProps;\n\nconst NotificationBar: React.FunctionComponent<Props> = ({\n  type,\n  message,\n}) => {\n  const [open, setOpen] = useState<LocalState[\"open\"]>(false)\n  const handleClose = (_event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n    setOpen(message != null);\n  }, [message, setOpen])\n\n  return (\n    <Snackbar\n      open={open}\n      message={message}\n      action={\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      }\n      ContentProps={{\n        classes: {\n          root: classnames({\n            [classes.info]: type === \"info\",\n            [classes.error]: type === \"error\",\n            [classes.success]: type === \"success\",\n            [classes.warning]: type === \"warning\",\n          }),\n        },\n      }}\n    />\n  );\n};\n\nexport default NotificationBar;\n","import React from \"react\";\n\nimport { Container } from \"@material-ui/core\";\n\nimport Header from \"../../organisms/Header\";\nimport Footer from \"../../organisms/Footer\";\nimport NotificationBar, { Notif } from \"../../organisms/NotificationBar\";\n\nimport classes from \"./classes.module.css\";\n\ninterface OwnProps {\n  notif?: { type: Notif, message: string };\n}\n\ntype Props =  OwnProps;\n\nconst MainTemplate: React.FunctionComponent<Props> = ({ notif, children }) => (\n  <div className={classes.LayoutPage}>\n    <Header />\n    <Container fixed={true} maxWidth=\"lg\" className={classes.LayoutContainer}>\n      {children}\n    </Container>\n    <Footer />\n    {notif != null && <NotificationBar type={notif.type} message={notif.message} />}\n  </div>\n);\n\nexport default MainTemplate;\n","import React, { useState, useEffect } from \"react\";\n\nimport MainTemplate from \"../../templates/MainTemplate\";\nimport { Notif } from \"../../organisms/NotificationBar\";\n\nconst Home: React.FunctionComponent = () => {\n  const [notif, setNotif] = useState<{ type: Notif, message: string}>();\n\n  // example\n  useEffect(() => {\n    const rand = Math.random() * 10;\n    const randomNotif = rand > 5 ?\n      { type: \"error\" as Notif, message: `${rand}` } :\n      { type: \"info\" as Notif, message: `${rand}` };\n\n    setNotif(randomNotif);\n  }, [setNotif]);\n\n  return (\n    <MainTemplate notif={notif}>\n      hello\n    </MainTemplate>\n  );\n}\n\nexport default Home;\n","import React, { useMemo } from \"react\";\nimport { useField, useFormikContext, ErrorMessage } from \"formik\";\n\nimport {\n  TextField,\n  TextFieldProps,\n} from \"@material-ui/core\";\n\nimport classes from \"./classes.module.css\";\n\ninterface OwnProps {\n  name: string;\n}\n\ntype Props = OwnProps & Omit<TextFieldProps, \"name\" | \"variant\" | \"value\">;\n\nconst CustomizedTextField: React.FunctionComponent<Props> = ({\n  name,\n  onChange = () => { },\n  onBlur = () => { },\n ...restProps\n }) => {\n  const context = useFormikContext<any>(); // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  // fallback\n  /* eslint-disable react-hooks/rules-of-hooks */\n  if (context === undefined) {\n    return (\n      <TextField\n        name={name}\n        onBlur={onBlur}\n        onChange={onChange}\n        {...restProps}\n      />\n    );\n  }\n\n  const hasError = useMemo(() => context !== undefined && context.errors[name] !== undefined, [context, name]);\n\n  const [field] = useField({ name });\n  const {\n    onChange: onFieldChange,\n    onBlur: onFieldBlur,\n    ...restFieldProps\n  } = field;\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = useMemo(() => e => {\n    onFieldChange(e);\n    onChange(e);\n  }, [onChange, onFieldChange]);\n\n  const handleBlur: React.FocusEventHandler<HTMLInputElement> = useMemo(() => e => {\n    onFieldBlur(e);\n    onBlur(e);\n  }, [onBlur, onFieldBlur]);\n  /* eslint-enable react-hooks/rules-of-hooks */\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      classes={{\n        root: classes.TextField,\n      }}\n      InputProps={{\n        notched: false,\n        labelWidth: 0,\n        classes: {\n          root: classes.Input,\n          input: classes.InputInput,\n        }\n      }}\n      InputLabelProps={{\n        shrink: true,\n        classes: {\n          root: classes.InputLabel,\n          outlined: classes.InputLabelOutlined,\n        }\n      }}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      {...restProps}\n      {...restFieldProps}\n      helperText={hasError ? <ErrorMessage name={name} /> : null}\n      FormHelperTextProps={{\n        classes: {\n          root: classes.FormHelperText,\n        }\n      }}\n    />\n  );\n};\n\nexport default CustomizedTextField;\n","import React from \"react\";\nimport { Formik, FormikValues } from \"formik\";\nimport { Schema } from \"yup\";\n\ninterface OwnProps {\n  initialValue: FormikValues;\n  onSubmit(values: FormikValues): void;\n  validationSchema: Schema<{}>;\n  children: React.ReactNode;\n}\n\ntype Props = OwnProps;\n\nconst Form: React.FunctionComponent<Props> = ({\n  initialValue,\n  validationSchema,\n  onSubmit,\n  children,\n}) => (\n  <Formik\n    initialValues={initialValue}\n    onSubmit={onSubmit}\n    validationSchema={validationSchema}\n    validateOnBlur={false}\n    validateOnChange={false}\n  >\n\n    {({\n      // values,\n      // touched,\n      // errors,\n      // dirty,\n      // isSubmitting,\n      // handleChange,\n      // handleBlur,\n      handleSubmit,\n      // handleReset,\n    }) => (\n      <form onSubmit={handleSubmit}>\n        {children}\n      </form>\n    )}\n\n  </Formik>\n);\n\n\nexport default Form;\n","import React, { useMemo } from \"react\";\nimport * as Yup from \"yup\";\n\nimport {\n  Typography,\n  Box,\n  Button,\n} from \"@material-ui/core\";\n\nimport TextField from \"../../atoms/TextField\";\nimport Form from \"../../organisms/Form\";\nimport MainTemplate from \"../../templates/MainTemplate\";\n\nconst About: React.FunctionComponent = () => {\n  const validationSchema = useMemo(() =>\n    Yup.object().shape({\n      email: Yup.string()\n        .email(\"invalid email address\"),\n      name: Yup.string()\n        .required(\"required !!!\"),\n      age: Yup.number()\n        .min(1, \"custom mess ${min}\") // eslint-disable-line no-template-curly-in-string\n        .max(10, \"custom mess ${max}\"), // eslint-disable-line no-template-curly-in-string\n  }), []);\n\n  return (\n    <MainTemplate>\n      <Typography variant=\"h6\">about</Typography>\n      <Form\n        initialValue={{ email: \"\", name: \"\", age: \"\" }}\n        onSubmit={(values) => { console.log(values) }}\n        validationSchema={validationSchema}\n      >\n        <>\n          <Box>\n            <TextField label=\"email\" name=\"email\" type=\"text\" />\n            <TextField label=\"name\" name=\"name\" type=\"text\" />\n            <TextField label=\"age\" name=\"age\" type=\"number\" />\n          </Box>\n          <Button type=\"submit\" variant=\"contained\">\n            submit\n          </Button>\n        </>\n      </Form>\n    </MainTemplate>\n  );\n};\n\nexport default About;\n","import React, { useState, useMemo } from \"react\";\nimport { v4 } from \"uuid\";\nimport * as Yup from \"yup\";\nimport { Formik, FormikValues } from \"formik\";\n\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport { AddCircle } from \"@material-ui/icons\";\n\nimport MainTemplate from \"../../templates/MainTemplate\";\nimport TextField from \"../../atoms/TextField\";\nimport classes from \"./classes.module.css\";\n\ninterface Task {\n  id: string;\n  title: string;\n  done: boolean;\n}\n\ninterface LocalState {\n  tasks: Task[];\n}\n\nconst TodoList: React.FunctionComponent = () => {\n  const [tasks, setTasks] = useState<LocalState[\"tasks\"]>([]);\n\n  const validationSchema = useMemo(() =>\n    Yup.object().shape({\n      id: Yup.string(),\n      title: Yup.string()\n        .required(\"required !!!\"),\n      done: Yup.boolean(),\n    }), []);\n\n  return (\n    <MainTemplate>\n      <Typography>Todo</Typography>\n      <Formik\n        initialValues={{ id: v4(), title: \"\", done: false }}\n        onSubmit={(values: FormikValues, { resetForm }) => {\n          const task: Task = {\n            id: v4(),\n            title: values.title,\n            done: false\n          };\n\n          setTasks([...tasks, task]);\n          resetForm();\n        }}\n        validationSchema={validationSchema}\n      >\n        {props => (\n          <form onSubmit={props.handleSubmit}>\n            <div className={classes.AddForm}>\n              <TextField label=\"Add Task\" name=\"title\" />\n              <IconButton\n                type=\"submit\"\n                size=\"small\"\n                color=\"primary\"\n                classes={{ root: classes.ButtonSubmit }}\n              >\n                <AddCircle />\n              </IconButton>\n            </div>\n          </form>\n        )}\n      </Formik>\n\n      {tasks.map(task =>\n        <div key={task.id}>{task.id} {task.title}</div>)}\n    </MainTemplate>\n  )\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Home from \"../pages/Home\";\nimport About from \"../pages/About\";\nimport TodoList from \"../pages/TodoList\";\n\nconst Router: React.FunctionComponent = () => (\n  <>\n    <CssBaseline />\n    <BrowserRouter basename=\"/react-app-dashboard\">\n      <Switch>\n        <Route exact={true} path=\"/\"><Home /></Route>\n        <Route exact={true} path=\"/about\"><About /></Route>\n        <Route exact={true} path=\"/todo\"><TodoList /></Route>\n      </Switch>\n    </BrowserRouter>\n  </>\n);\n\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutFooter\":\"classes_LayoutFooter__2_55F\",\"Link\":\"classes_Link__1Xxpu\",\"TypographyFooter\":\"classes_TypographyFooter__2rgXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextField\":\"classes_TextField__CZyKr\",\"Input\":\"classes_Input__1AXf8\",\"InputInput\":\"classes_InputInput__QeAJE\",\"InputLabel\":\"classes_InputLabel__32acC\",\"InputLabelOutlined\":\"classes_InputLabelOutlined__2Yoje\",\"FormHelperText\":\"classes_FormHelperText__3g7ad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"classes_error__1-CxA\",\"warning\":\"classes_warning__2i6wy\",\"info\":\"classes_info__1NpZT\",\"success\":\"classes_success__Y8K-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutHeader\":\"classes_LayoutHeader__2e4Ws\",\"TypographyHeader\":\"classes_TypographyHeader__i2FRa\",\"Link\":\"classes_Link__1WTzc\"};"],"sourceRoot":""}